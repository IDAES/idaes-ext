import pyomo.environ as pyo
from pyomo.common.fileutils import find_library

flib = find_library("general_helmholtz_external")

def main():
    m = pyo.ConcreteModel()
    m.pc_func = pyo.ExternalFunction(library=flib, function="pc")
    m.tc_func = pyo.ExternalFunction(library=flib, function="tc")
    m.rhoc_func = pyo.ExternalFunction(library=flib, function="rhoc")
    m.pt_func = pyo.ExternalFunction(library=flib, function="pt")
    m.tt_func = pyo.ExternalFunction(library=flib, function="tt")
    m.rhot_l_func = pyo.ExternalFunction(library=flib, function="rhot_l")
    m.rhot_v_func = pyo.ExternalFunction(library=flib, function="rhot_v")
    m.sgc_func = pyo.ExternalFunction(library=flib, function="sgc")

    m.p_func = pyo.ExternalFunction(library=flib, function="p")
    m.u_func = pyo.ExternalFunction(library=flib, function="u")
    m.s_func = pyo.ExternalFunction(library=flib, function="s")
    m.h_func = pyo.ExternalFunction(library=flib, function="h")
    m.g_func = pyo.ExternalFunction(library=flib, function="g")
    m.f_func = pyo.ExternalFunction(library=flib, function="f")

    m.hvpt_func = pyo.ExternalFunction(library=flib, function="hvpt")
    m.hlpt_func = pyo.ExternalFunction(library=flib, function="hlpt")
    m.svpt_func = pyo.ExternalFunction(library=flib, function="svpt")
    m.slpt_func = pyo.ExternalFunction(library=flib, function="slpt")
    m.uvpt_func = pyo.ExternalFunction(library=flib, function="uvpt")
    m.ulpt_func = pyo.ExternalFunction(library=flib, function="ulpt")
    m.delta_liq_func = pyo.ExternalFunction(library=flib, function="delta_liq")
    m.delta_vap_func = pyo.ExternalFunction(library=flib, function="delta_vap")
    m.tau_func = pyo.ExternalFunction(library=flib, function="tau")
    m.vf_func = pyo.ExternalFunction(library=flib, function="vf")
    m.taus_func = pyo.ExternalFunction(library=flib, function="taus")
    m.vfs_func = pyo.ExternalFunction(library=flib, function="vfs")
    m.tauu_func = pyo.ExternalFunction(library=flib, function="tauu")
    m.vfu_func = pyo.ExternalFunction(library=flib, function="vfu")

    m.tau_sat_func = pyo.ExternalFunction(library=flib, function="tau_sat")
    m.p_sat_func = pyo.ExternalFunction(library=flib, function="p_sat")
    m.delta_sat_v_func = pyo.ExternalFunction(library=flib, function="delta_sat_v")
    m.delta_sat_l_func = pyo.ExternalFunction(library=flib, function="delta_sat_l")

    pc = pyo.value(m.pc_func("h2o"))
    tc = pyo.value(m.tc_func("h2o"))
    rhoc = pyo.value(m.rhoc_func("h2o"))
    pt = pyo.value(m.pc_func("h2o"))
    tt = pyo.value(m.tc_func("h2o"))
    rhot_l = pyo.value(m.rhot_l_func("h2o"))
    rhot_v = pyo.value(m.rhot_v_func("h2o"))
    sgc = pyo.value(m.sgc_func("h2o"))

    m.density = pyo.Var(initialize=961.618, doc="Density")
    m.temperature = pyo.Var(initialize=375, doc="Temperature")

    p = pyo.value(m.p_func("h2o", m.density/rhoc, tc/m.temperature))
    u = pyo.value(m.u_func("h2o", m.density/rhoc, tc/m.temperature))
    s = pyo.value(m.s_func("h2o", m.density/rhoc, tc/m.temperature))
    h = pyo.value(m.h_func("h2o", m.density/rhoc, tc/m.temperature))
    g = pyo.value(m.g_func("h2o", m.density/rhoc, tc/m.temperature))
    f = pyo.value(m.f_func("h2o", m.density/rhoc, tc/m.temperature))
    hvpt = pyo.value(m.hvpt_func("h2o", p, tc/m.temperature))
    hlpt = pyo.value(m.hlpt_func("h2o", p, tc/m.temperature))
    svpt = pyo.value(m.svpt_func("h2o", p, tc/m.temperature))
    slpt = pyo.value(m.slpt_func("h2o", p, tc/m.temperature))
    uvpt = pyo.value(m.uvpt_func("h2o", p, tc/m.temperature))
    ulpt = pyo.value(m.ulpt_func("h2o", p, tc/m.temperature))
    delta_vap = pyo.value(m.delta_vap_func("h2o", p, tc/m.temperature))
    delta_liq = pyo.value(m.delta_liq_func("h2o", p, tc/m.temperature))
    tauh = pyo.value(m.tau_func("h2o", h, p))
    vfh = pyo.value(m.vf_func("h2o", h, p))
    taus = pyo.value(m.taus_func("h2o", s, p))
    vfs = pyo.value(m.vfs_func("h2o", s, p))
    tauu = pyo.value(m.tauu_func("h2o", u, p))
    vfu = pyo.value(m.vfu_func("h2o", u, p))

    tau_sat = pyo.value(m.tau_sat_func("h2o", p))
    p_sat = pyo.value(m.p_sat_func("h2o", tc/m.temperature))
    delta_sat_l = pyo.value(m.delta_sat_l_func("h2o", tc/m.temperature))
    delta_sat_v = pyo.value(m.delta_sat_v_func("h2o", tc/m.temperature))


    print("")
    print(f"Parameters {'h2o'}")
    print("-------------------------------------------------------------------")
    print(f"critical pressure = {pc} [kPa]")
    print(f"critical temperature = {tc} [K]")
    print(f"critical density = {rhoc} [kg/m^3]")
    print(f"tripple point pressure = {pt} [kPa]")
    print(f"tripple point temperature = {tt} [K]")
    print(f"tripple point liquid density = {rhot_l} [kg/m^3]")
    print(f"tripple point liquid density = {rhot_v} [kg/m^3]")
    print(f"specific gas constant = {sgc} [kJ/kg/K] or [kPa m^3/kg/K]")
    print("-------------------------------------------------------------------")
    print("")
    print(f"Basic Properties {'h2o'} ")
    print(f"  density = {pyo.value(m.density)} kg/m^3")
    print(f"  temperature = {pyo.value(m.temperature)} K")
    print("-------------------------------------------------------------------")
    print(f"p = {p} [kPa]")
    print(f"u = {u} [kJ/kg]")
    print(f"s = {s} [kJ/kg/K]")
    print(f"h = {h} [kJ/kg]")
    print(f"g = {g} [kJ/kg]")
    print(f"f = {f} [kJ/kg]")
    print("-------------------------------------------------------------------")
    print("")
    print(f"State Var Change PT {'h2o'}")
    print(f"  pressure = {p} kPa")
    print(f"  temperature = {pyo.value(m.temperature)} K")
    print("-------------------------------------------------------------------")
    print(f"hvpt = {hvpt} [kJ/kg]")
    print(f"hlpt = {hlpt} [kJ/kg]")
    print(f"svpt = {svpt} [kJ/kg]")
    print(f"slpt = {slpt} [kJ/kg]")
    print(f"uvpt = {uvpt} [kJ/kg]")
    print(f"ulpt = {ulpt} [kJ/kg]")
    print(f"rho_vap = {delta_vap*rhoc} [kg/m^3]")
    print(f"rho_liq = {delta_liq*rhoc} [kg/m^3]")
    print("-------------------------------------------------------------------")
    print("")
    print(f"State Var Change HP {'h2o'}")
    print(f"  enthalpy = {h} kJ/kg")
    print(f"  pressure = {p} kPa")
    print("-------------------------------------------------------------------")
    print(f"T = {tc/tauh} [K]")
    print(f"vf = {vfh} [none]")
    print("-------------------------------------------------------------------")
    print("")
    print(f"State Var Change SP {'h2o'}")
    print(f"  entropy = {s} kJ/kg/K")
    print(f"  pressure = {p} kPa")
    print("-------------------------------------------------------------------")
    print(f"T = {tc/taus} [K]")
    print(f"vf = {vfs} [none]")
    print("-------------------------------------------------------------------")
    print("")
    print(f"State Var Change UP {'h2o'}")
    print(f"  internal energy = {u} kJ/kg")
    print(f"  pressure = {p} kPa")
    print("-------------------------------------------------------------------")
    print(f"T = {tc/tauu} [K]")
    print(f"vf = {vfu} [none]")
    print("-------------------------------------------------------------------")
    print("")
    print(f"Saturation Curve {'h2o'}")
    print(f"  temprature = {pyo.value(m.temperature)} K")
    print("-------------------------------------------------------------------")
    print(f"p_sat = {p_sat}")
    print(f"rho_sat_l = {delta_sat_l*rhoc}")
    print(f"rho_sat_v = {delta_sat_v*rhoc}")
    print("-------------------------------------------------------------------")
    print("")
    print(f"Saturation Curve {'h2o'}")
    print(f"  pressure = {p} kPa")
    print("-------------------------------------------------------------------")
    print(f"T_sat = {tc/tau_sat} K")
    print("-------------------------------------------------------------------")

if __name__ == "__main__":
    main()
